{"ast":null,"code":"import { isFSA } from 'flux-standard-action';\n/**\n * FSA compliant middlware which handles if the payload of an action is a function.\n */\n\nconst thunkMiddleware = extraArg => {\n  return _ref => {\n    let {\n      dispatch,\n      getState\n    } = _ref;\n    return next => {\n      return action => {\n        if (isFSA(action) && typeof action.payload === 'function') {\n          return next({ ...action,\n            payload: action.payload(dispatch, getState, extraArg)\n          });\n        } else {\n          return next(action);\n        }\n      };\n    };\n  };\n};\n\nexport { thunkMiddleware };","map":{"version":3,"names":["isFSA","thunkMiddleware","extraArg","dispatch","getState","next","action","payload"],"sources":["/home/sarah.plazio/projects/fullstack-starter/ui/src/middleware/index.js"],"sourcesContent":["import { isFSA } from 'flux-standard-action'\n\n/**\n * FSA compliant middlware which handles if the payload of an action is a function.\n */\nconst thunkMiddleware = (extraArg) => {\n  return ({ dispatch, getState }) => {\n    return (next)=> {\n      return (action) => {\n        if (isFSA(action) && typeof action.payload === 'function') {\n          return next(\n            {\n              ...action,\n              payload: action.payload(dispatch, getState, extraArg)\n            }\n          )\n        } else {\n          return next(action)\n        }\n      }\n    }\n  }\n}\nexport { thunkMiddleware }"],"mappings":"AAAA,SAASA,KAAT,QAAsB,sBAAtB;AAEA;AACA;AACA;;AACA,MAAMC,eAAe,GAAIC,QAAD,IAAc;EACpC,OAAO,QAA4B;IAAA,IAA3B;MAAEC,QAAF;MAAYC;IAAZ,CAA2B;IACjC,OAAQC,IAAD,IAAS;MACd,OAAQC,MAAD,IAAY;QACjB,IAAIN,KAAK,CAACM,MAAD,CAAL,IAAiB,OAAOA,MAAM,CAACC,OAAd,KAA0B,UAA/C,EAA2D;UACzD,OAAOF,IAAI,CACT,EACE,GAAGC,MADL;YAEEC,OAAO,EAAED,MAAM,CAACC,OAAP,CAAeJ,QAAf,EAAyBC,QAAzB,EAAmCF,QAAnC;UAFX,CADS,CAAX;QAMD,CAPD,MAOO;UACL,OAAOG,IAAI,CAACC,MAAD,CAAX;QACD;MACF,CAXD;IAYD,CAbD;EAcD,CAfD;AAgBD,CAjBD;;AAkBA,SAASL,eAAT"},"metadata":{},"sourceType":"module"}