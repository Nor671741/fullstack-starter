{"ast":null,"code":"var _jsxFileName = \"/home/sarah.plazio/projects/fullstack-starter/ui/src/index.js\";\nimport axios from 'axios';\nimport { createLogger } from 'redux-logger';\nimport DesignLayout from './containers/DesignLayout';\nimport HomeContainer from './containers/HomeContainer';\nimport { Provider } from 'react-redux';\nimport React from 'react';\nimport ReactDom from 'react-dom';\nimport reducers from './reducers';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { thunkMiddleware } from './middleware';\nimport { applyMiddleware, createStore } from 'redux';\naxios.defaults.withCredentials = true;\nconst configPath = '/config.json';\nconst defaultConfig = {\n  restAPIUrl: 'http://localhost:8080',\n  publicPath: '/'\n};\naxios.get(`${configPath}`).then(success => {\n  renderApplication(Object.assign(defaultConfig, success.data));\n}, failure => {\n  renderApplication(defaultConfig);\n});\n\nconst renderApplication = overrideConfig => {\n  const config = { ...overrideConfig\n  };\n  let middleware = [thunkMiddleware(config)];\n\n  if (process.env.NODE_ENV !== 'production') {\n    middleware = [...middleware, createLogger()];\n  }\n\n  const store = createStore(reducers, {\n    config: config\n  }, applyMiddleware(...middleware));\n  ReactDom.render( /*#__PURE__*/React.createElement(Provider, {\n    store: store,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DesignLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(HomeContainer, {\n    publicPath: config.publicPath,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  })))), document.getElementById('app'));\n};","map":{"version":3,"names":["axios","createLogger","DesignLayout","HomeContainer","Provider","React","ReactDom","reducers","BrowserRouter","Router","thunkMiddleware","applyMiddleware","createStore","defaults","withCredentials","configPath","defaultConfig","restAPIUrl","publicPath","get","then","success","renderApplication","Object","assign","data","failure","overrideConfig","config","middleware","process","env","NODE_ENV","store","render","document","getElementById"],"sources":["/home/sarah.plazio/projects/fullstack-starter/ui/src/index.js"],"sourcesContent":["import axios from 'axios'\nimport { createLogger } from 'redux-logger'\nimport DesignLayout from './containers/DesignLayout'\nimport HomeContainer from './containers/HomeContainer'\nimport { Provider } from 'react-redux'\nimport React from 'react'\nimport ReactDom from 'react-dom'\nimport reducers from './reducers'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { thunkMiddleware } from './middleware'\nimport { applyMiddleware, createStore } from 'redux'\nimport 'core-js/es/map'\nimport 'core-js/es/set'\n\naxios.defaults.withCredentials = true\n\nconst configPath = '/config.json'\nconst defaultConfig = {\n  restAPIUrl: 'http://localhost:8080',\n  publicPath: '/',\n}\n\naxios.get(`${configPath}`).then(\n  (success) => {\n    renderApplication(Object.assign(defaultConfig, success.data))\n  },\n  (failure) => {\n    renderApplication(defaultConfig)\n  }\n)\n\nconst renderApplication = (overrideConfig) => {\n  const config = {\n    ...overrideConfig\n  }\n\n  let middleware = [thunkMiddleware(config)]\n\n  if (process.env.NODE_ENV !== 'production') {\n    middleware = [...middleware, createLogger()]\n  }\n\n  const store = createStore(reducers, { config: config }, applyMiddleware(...middleware))\n\n  ReactDom.render(\n    <Provider store={store}>\n      <Router>\n        <DesignLayout>\n          <HomeContainer publicPath={config.publicPath}/>\n        </DesignLayout>\n      </Router>\n    </Provider>,\n    document.getElementById('app')\n  )\n}"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,aAAa,IAAIC,MAA1B,QAAwC,kBAAxC;AACA,SAASC,eAAT,QAAgC,cAAhC;AACA,SAASC,eAAT,EAA0BC,WAA1B,QAA6C,OAA7C;AAIAZ,KAAK,CAACa,QAAN,CAAeC,eAAf,GAAiC,IAAjC;AAEA,MAAMC,UAAU,GAAG,cAAnB;AACA,MAAMC,aAAa,GAAG;EACpBC,UAAU,EAAE,uBADQ;EAEpBC,UAAU,EAAE;AAFQ,CAAtB;AAKAlB,KAAK,CAACmB,GAAN,CAAW,GAAEJ,UAAW,EAAxB,EAA2BK,IAA3B,CACGC,OAAD,IAAa;EACXC,iBAAiB,CAACC,MAAM,CAACC,MAAP,CAAcR,aAAd,EAA6BK,OAAO,CAACI,IAArC,CAAD,CAAjB;AACD,CAHH,EAIGC,OAAD,IAAa;EACXJ,iBAAiB,CAACN,aAAD,CAAjB;AACD,CANH;;AASA,MAAMM,iBAAiB,GAAIK,cAAD,IAAoB;EAC5C,MAAMC,MAAM,GAAG,EACb,GAAGD;EADU,CAAf;EAIA,IAAIE,UAAU,GAAG,CAACnB,eAAe,CAACkB,MAAD,CAAhB,CAAjB;;EAEA,IAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;IACzCH,UAAU,GAAG,CAAC,GAAGA,UAAJ,EAAgB5B,YAAY,EAA5B,CAAb;EACD;;EAED,MAAMgC,KAAK,GAAGrB,WAAW,CAACL,QAAD,EAAW;IAAEqB,MAAM,EAAEA;EAAV,CAAX,EAA+BjB,eAAe,CAAC,GAAGkB,UAAJ,CAA9C,CAAzB;EAEAvB,QAAQ,CAAC4B,MAAT,eACE,oBAAC,QAAD;IAAU,KAAK,EAAED,KAAjB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,MAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,YAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE,oBAAC,aAAD;IAAe,UAAU,EAAEL,MAAM,CAACV,UAAlC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,CADF,CADF,CADF,EAQEiB,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CARF;AAUD,CAvBD"},"metadata":{},"sourceType":"module"}